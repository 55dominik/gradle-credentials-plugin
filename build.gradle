plugins {
    id 'nu.studer.plugindev' version '2.0'
    id 'nu.studer.credentials' version '2.1'
    id 'org.nosphere.gradle.github.actions' version '1.2.0'
    id 'groovy'
}

group = 'nu.studer'
version = '2.2-DEV'

dependencies {
    implementation 'nu.studer:java-ordered-properties:1.0.4'
    implementation 'commons-codec:commons-codec:1.15'

    testImplementation('org.spockframework:spock-core:2.0-groovy-3.0')
    testImplementation 'org.spockframework:spock-junit4:2.0-groovy-3.0'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

plugindev {
    pluginDescription 'Gradle plugin to store and access encrypted credentials for use in Gradle builds.'
    pluginImplementationClass 'nu.studer.gradle.credentials.CredentialsPlugin'
    pluginLicenses 'Apache-2.0'
    pluginTags 'gradle', 'plugin', 'credentials'
    authorId 'etiennestuder'
    authorName 'Etienne Studer'
    authorEmail 'etienne@studer.nu'
    projectUrl 'https://github.com/etiennestuder/gradle-credentials-plugin'
    projectInceptionYear '2014'
    done()
}

bintray {
    user = credentials.BINTRAY_USER
    key = credentials.BINTRAY_API_KEY
    pkg.repo = 'gradle-plugins'
    dryRun = false
}

def testAll = tasks.create('testAll') {
    description = 'Runs the Gradle cross-version tests.'
    group = 'Verification'
}

List<String> testedGradleVersions = []
testedGradleVersions << "7.1"
testedGradleVersions << "7.0.2"
testedGradleVersions << "6.9"
testedGradleVersions << "6.0.1"

testedGradleVersions.each { version ->
    project.tasks.create("test_" + version.replaceAll("[^a-zA-Z0-9]", "_"), Test).with {
        systemProperty 'testContext.gradleVersion', version
        testAll.dependsOn(it)
    }
}

tasks.withType(Test).configureEach {
    maxParallelForks = 2
    useJUnitPlatform()
}
